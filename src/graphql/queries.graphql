query FindLanguages($input: LanguageFilterInput!) {
    findLanguages(input: $input) {
        nodes {
            ...LanguageProps
        }
        totalElements
    }
}

query FindItem($input: SearchInput!, $pageSize: Int, $pageNumber: Int) {
    search(input: $input, pageSize: $pageSize, pageNumber: $pageNumber) {
        nodes {
            ...SearchResultProps
        }
        pageInfo {
            ...PageProps
        }
        totalElements
    }
}

query PropertyTree {
    hierarchy(input: {
        rootNodeFilter: {
            entityTypeIn: [Subject]
            tagged: ["6f96aaa7-e08f-49bb-ac63-93061d4c5db2"]
        }
    }) {
        nodes {
            ...ItemProps
        }
        paths
    }
}

query GetDocumentEntry($id: ID!) {
    node(id: $id) {
        ...ExternalDocumentDetailProps
    }
}

query GetObjectEntry($id: ID!) {
    node(id: $id) {
        ...ObjectDetailProps
    }
}

query GetSubjectEntry($id: ID!) {
    node: getSubject(id: $id) {
        ...SubjectDetailProps
    }
}

query GetPropertyEntry($id: ID!) {
    node: getProperty(id: $id) {
        ...PropertyDetailProps
    }
}

query GetValueListEntry($id: ID!) {
    node: getValueList(id: $id) {
        ...ValueListDetailProps
    }
}

query GetUnitEntry($id: ID!) {
    node: getUnit(id: $id) {
        ...UnitDetailProps
    }
}

query GetValueEntry($id: ID!) {
    node: getValue(id: $id) {
        ...ValueDetailProps
    }
}

query GetDictionaryEntry($id: ID!) {
    node: getDictionary(id: $id) {
        ...MetaProps
        id
        name {
            ...TranslationProps
        }
        tags {
            id
            name
        }
        concepts {
            ...ConceptProps
        }
    }
}

query GetDictionaryEntryWithPagination($id: ID!) {
    node: getDictionary(id: $id) {
        ...MetaProps
        id
        name {
            ...TranslationProps
        }
        tags {
            id
            name
        }
        concepts {
            ...ConceptProps
        }
    }
}

query GetDictionaryEntryWithPagination($id: ID!) {
    node: getDictionary(id: $id) {
        ...MetaProps
        id
        name {
            ...TranslationProps
        }
        tags {
            id
            name
        }
        concepts {
            ...ConceptProps
        }
    }
}