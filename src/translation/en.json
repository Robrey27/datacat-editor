{
  "verification": {
    "title": "Verification Criterion",
    "category_title": "Category",
    "criteria": {
      "integrity": "Integrity",
      "uniqueness": "Uniqueness",
      "language": "Language"
    },
    "category": {
      "no_model_group": "Domain models without a group",
      "no_group_class": "Groups without a class",
      "no_class_properties": "Classes without properties/property groups",
      "no_property_group": "Property groups without properties",
      "no_property": "Properties without a class or property group",
      "no_measure": "Measures without properties",
      "no_unit": "Units without a measure",
      "no_value": "Values without a measure",
      "duplicate_id": "ID duplicates",
      "duplicate_name_type": "Name duplicates (within a type)",
      "duplicate_name_all": "Name duplicates (entire dataset)",
      "missing_description": "Missing description",
      "missing_description_en": "Missing description (English)",
      "missing_translation_en": "Missing name translation (English)"
    },
    "result": {
      "select_criteria": "Select a criterion and category.",
      "select_entry": "Select a result from the list view to display properties."
    },
    "edit": {
      "group": "Edit group",
      "class": "Edit class",
      "property": "Edit property",
      "measure": "Edit measure",
      "unit": "Edit unit",
      "value": "Edit value",
      "model": "Edit domain model"
    }
  },
  "home": {
    "title": "Welcome to datacat",
    "about.title": "About the Project",
    "about.description": "The datacat platform is a cross-project research effort by the Department of 'Geodesy and BIM' at the Faculty of Geoinformation at the University of Applied Sciences Dresden (HTW Dresden). The platform aims to provide user- and developer-friendly components for creating and publishing classification systems, object catalogs, and property databases in the context of the BIM methodology.",
    "components.title": "The Components",
    "components.description": "The platform is currently divided into the core components: datacat API, a developer-friendly, self-documenting GraphQL interface for complex queries on the data catalog, and the datacat editor, a browser-based user tool for navigating and editing the data.",
    "methodology.title": "The Methodology",
    "methodology.description": "The core of the development is a data schema closely aligned with established standards such as DIN EN ISO 12006-3 and DIN EN ISO 23387, making it possible to maintain even complex classification systems in the catalog. The API is entirely agnostic regarding the application-specific structure to be implemented in the data catalog.",
    "opensource.title": "Open Source",
    "opensource.description": "datacat is developed as free and open-source software under the GPLv3 license and can be freely used and distributed, including commercially. The source code is hosted on GitHub. Any form of support for the project is welcome."
  },
  "intro": {
    "description1": "datacat editor is a web-based, open-source tool for collaboratively developing data catalogs for the construction industry. The source code is available under the GPL v3 license.",
    "description2": "In a data catalog, you can name, describe, and categorize concepts such as actors, activities, building elements, and properties according to function and form. By creating relationships between these concepts, the built environment can be described more precisely.",
    "description3": "The developed dataset is available for retrieval via an API for developers of import/export tools and CAD/BIM plugins. In the future, validation routines will be developed to identify inconsistencies such as unused concepts, potential duplicates, and missing translations in the catalog.",
    "description4": "datacat is developed at the University of Applied Sciences Dresden (HTW Dresden). If you are interested in the project or have questions about the application, please feel free to contact us directly through the details provided below.",
    "call_to_action": "This is a software preview. Your direct involvement as an open-source developer or indirect support through feedback is highly appreciated."
  },
  "profile": {
    "heading": "Edit Profile",
    "update_success": "Profile updated!",
    "error": "An error occurred while fetching the profile.",
    "form": {
      "first_name": "First Name",
      "first_name_helper": "Providing your first name is mandatory. It will be displayed to other catalog users to attribute entries and changes and facilitate collaboration.",
      "last_name": "Last Name",
      "last_name_helper": "Providing your last name is mandatory. It will be displayed to other catalog users to attribute entries and changes and facilitate collaboration.",
      "email": "Email",
      "email_helper": "Providing a valid email address is mandatory. It will be used to validate your user account and inform you about changes in the catalog.",
      "organization": "Organization",
      "organization_helper": "If applicable, please provide the company, organization, or institute you are affiliated with."
    }
  },
  "boarding": {
    "welcome": "Welcome to the datacat editor",
    "login_tab": "Login",
    "signup_tab": "Sign Up",
    "login_message": "Please use your username and password to log in to the editor.",
    "signup_message": "You can register to gain read access to the catalog. If you want to contribute to the catalog, please inform the administrator.",
    "signup_success": "You will receive a confirmation code via email in the next few minutes to activate your account.",
    "login_success": "Welcome back!"
  },
  "import": {
    "heading": "Import Catalog (CSV)",
    "description": "This page allows you to import entities and their relationships. Similar to the export, two CSV files can be imported here. One file contains the entities in the following schema:",
    "entity_columns": "id;type;tags;name;name_en;description;version;createdBy;created;lastModified;lastModifiedBy",
    "entity_columns_note": "Columns marked with r must be filled in for each entity, columns marked with o can optionally contain values. The remaining columns are not considered during import and can therefore remain empty.",
    "tags_note": "To make the entities visible in the datacatEditor interface, they must be given tags of the chosen taxonomy there. (Reference document, domain model, group, class, property group, property, measure, value, unit of measure)",
    "relation_columns_note": "The other file optionally contains the relationships between entities with the following columns:",
    "relation_columns": "entity1;entity1Type;relationId;relationshipType;entity2;entity2Type",
    "relation_columns_note_2": "The entity types can be left blank here.",
    "entities_file_button": "Select Entities File",
    "relations_file_button": "Select Relations File",
    "import_button": "Import",
    "import_tag_label": "Import Tag (optional)",
    "csv_templates_button": "CSV Templates",
    "no_file_selected": "No file selected",
    "note_entities_only": "NOTE: Only entities will be imported, no relationships between them!",
    "note_relations_only": "NOTE: Only relationships will be imported. The entities must already be present in the feature server!",
    "error_columns_mismatch": "The column names do not match the specification.",
    "error_creating_record": "Error creating record",
    "error_creating_relationship": "Error creating relationship",
    "new_tag_created": "New tag created",
    "create_tag_failed": "Failed to create new tag",
    "created_record": "Created new record",
    "created_relationship": "Created new relationship"
  },
  "import_excel": {
    "heading": "Import Catalog (Excel Table)",
    "description": "This page also allows you to import entities and their relationships. Unlike the CSV import, an external Excel table can be used. For the import to work, the columns must be correctly specified in which the respective entities are listed: External Document, Domain model, group, class, property, measure (enum), unit of measure, and value.",
    "select_all": "Select/Deselect All",
    "label": "Label:",
    "sheet": "Sheet",
    "name": "Name",
    "id": "ID",
    "document": "External Documents",
    "model": "Domain Models",
    "group": "Groups",
    "class": "Klasses",
    "property": "Properties",
    "measure": "Measures",
    "unit": "Units",
    "value": "Values",
    "sheetName": "Sheet Name",
    "relations": "Relations:",
    "rel_doc_model": "External Document to Domain Model",
    "rel_model_group": "Domain Model to Group",
    "rel_group_class": "Group to Class",
    "rel_class_property": "Class to Property",
    "rel_property_measure": "Property to Measure",
    "rel_measure_unit": "Measure to Unit",
    "rel_measure_value": "Measure to Value",
    "validation_failed": "Validation failed. Please check the error messages.",
    "validation_success": "Validation successful. You can now import the Excel file.",
    "no_file_selected": "No file selected",
    "select_file_button": "Select Excel Table",
    "check_inputs_button": "Check Inputs",
    "import_tag_label": "Import Tag (optional)",
    "import_button": "Import Excel Table",
    "reset_button": "Reset Inputs",
    "progress": "{progress}% completed"
  },
  "app_drawer": {
    "general": "General",
    "home": "Home",
    "edit_profile": "Edit Profile",
    "search_catalog": "Search Catalog",
    "audit": "Check/Verify",
    "import": "Import",
    "export": "Export",
    "graphiql": "GraphiQL Interface",
    "new_tags": "Create New Tags",
    "grid_view": "Grid View",
    "catalog": "Catalog",
    "documents": "External Documents",
    "models": "Domain Models",
    "groups": "Groups",
    "classes": "Classes",
    "data_templates": "Data Templates",
    "property_groups": "Property Groups",
    "properties": "Properties",
    "measures": "Measures",
    "units": "Units",
    "values": "Values"
  },
  "signup": {
    "username_helper": "A username is required. No whitespace. Must start with a letter and have a minimum length of 3.",
    "password_helper": "A password is required and must have a minimum length of 8.",
    "username_label": "Username",
    "username_error": "The username cannot be changed after registration.",
    "password_label": "Password",
    "password_repeat_label": "Repeat Password",
    "password_repeat_error": "The input does not match the password.",
    "first_name_label": "First Name",
    "last_name_label": "Last Name",
    "email_label": "Email",
    "email_error": "Please provide a valid email address.",
    "organization_label": "Organization",
    "signup_button": "Sign Up"
  },
  "login": {
    "username_label": "Username",
    "password_label": "Password",
    "login_button": "Login"
  },
  "create_entry_form": {
    "name_label": "Name (de)",
    "name_helper": "Name the concept in the professional context and as precisely as possible. Separate synonyms with a semicolon.",
    "description_label": "Description (de)",
    "description_helper": "Describe the concept in its meaning. Use the description in particular to distinguish it from possibly similarly named but professionally different concepts.",
    "comment_label": "Comment (de)",
    "comment_helper": "Leave a comment on this concept. Additional information can be exchanged between editors here.",
    "id_label": "ID",
    "id_helper": "The ID is usually generated automatically. An ID can be specified if it has already been assigned to the concept in a higher context.",
    "version_id_label": "Version ID",
    "version_date_label": "Version date",
    "save_button": "Save"
  },
  "create_entry_split_button": {
    "add_entry": "Add Entry",
    "show_more_options": "Show more options",
    "create_entry": "Create {title}"
  },
  "composite_catalog_entry_view": {
    "more_results": "More Results",
    "edit_entry": "Edit {title}",
    "select_entry": "Select {title} in the list view to display properties."
  },
  "document_form": {
    "loading": "Loading reference document...",
    "error": "An error occurred...",
    "update_success": "Update successful.",
    "delete_success": "Reference document deleted.",
    "described_concepts": "Concepts described by the reference document",
    "delete_button": "Delete"
  },
  "domain_class_form": {
    "loading": "Loading class...",
    "error": "An error occurred...",
    "update_success": "Update successful.",
    "delete_success": "Class deleted.",
    "assigned_property_groups": "Property groups assigned to the class {name}",
    "assigned_properties": "Properties directly assigned to the class {name}",
    "reference_documents": "Reference documents describing this class",
    "no_reference_documents": "Not described by any reference document in the data catalog",
    "groups_using_class": "Groups using this class",
    "no_groups_using_class": "The class is not used by any group",
    "delete_button": "Delete"
  },
  "domain_group_form": {
    "loading": "Loading group...",
    "error": "An error occurred...",
    "update_success": "Update successful.",
    "delete_success": "Group deleted.",
    "grouped_classes": "Grouped classes",
    "grouped_classes_description": "Classes assigned to this group.",
    "reference_documents": "Reference documents describing this group",
    "no_reference_documents": "Not described by any reference document in the data catalog",
    "domain_models_using_group": "Domain models using this group",
    "no_domain_models_using_group": "The group is not used by any domain model",
    "delete_button": "Delete"
  },
  "delete_import_view": {
    "heading": "Delete catalog entries with a specific tag",
    "description": "Entities with a specific tag can be deleted here. All relationships attached to the entities will also be deleted.",
    "tag_label": "Tag",
    "delete_button": "Delete catalog entries",
    "tag_not_exist": "The tag {tag} does not exist!",
    "delete_success": "Deleted catalog record {name}",
    "error_occurred": "An error has occurred..."
  },
  "export_view": {
    "heading": "Export catalog",
    "description": "The following button starts the download of a ZIP file containing two CSV files inside.\nThe file 'Entities.csv' contains all catalog entries with their metadata.\nThe file 'Relationships.csv' stores the relationships between the catalog entries.\nThe result file is encoded in UTF-8, uses commas (,) as delimiters, and double quotes (\") as text qualifiers.\nThe data is ready for export as soon as the button is no longer grayed out.",
    "export_button": "Export CSV"
  },
  "tag_view": {
    "heading": "Existing Tags",
    "explanation": "This page is used to add new tags to the database. The tags can then be used in the grid view to add new tags to the existing entries.",
    "new_tag_label": "Create new tags",
    "add_tag_button": "Add Tag",
    "loading": "Loading...",
    "error_loading": "Error loading tags: {error}",
    "enter_tag_name": "Please enter a tag name.",
    "tag_exists": "Tag \"{tag}\" already exists.",
    "tag_added_success": "Tag \"{tag}\" added successfully.",
    "tag_added_error": "Error adding tag \"{tag}\"."
  },
  "hierarchy": {
    "error": "An error occurred while fetching the property tree.",
    "select_concept": "Select a concept in the tree view to display properties.",
    "edit_group": "Edit group",
    "edit_class": "Edit class",
    "edit_property": "Edit property",
    "edit_measure": "Edit measure",
    "edit_unit": "Edit unit",
    "edit_value": "Edit value",
    "edit_model": "Edit domain model",
    "search_catalog": "Search catalog"
  },
  "grid_view": {
    "loading": "Loading table contents",
    "tag_filter_title": "Filter by tags",
    "select_tag": "Select a tag",
    "add_tag": "Add Tag",
    "show_only_documents": "Show only reference documents",
    "show_only_models": "Show only domain models",
    "show_only_groups": "Show only groups",
    "show_only_classes": "Show only classes",
    "show_only_property_groups": "Show only property groups",
    "show_only_properties": "Show only properties",
    "show_all": "Show all",
    "reference_documents": "Reference documents",
    "domain_models": "Domain models",
    "groups": "Groups",
    "classes": "Classes",
    "property_groups": "Property groups",
    "properties": "Properties",
    "tag_filter_placeholder": "Select a tag"
  }
}